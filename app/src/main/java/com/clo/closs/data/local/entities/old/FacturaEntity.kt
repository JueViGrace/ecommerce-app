package com.clo.closs.data.local.entities.old

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.Index
import androidx.room.PrimaryKey
import com.clo.closs.domain.model.old.Factura

// Data Class que representa la tabla de facturas
@Entity(tableName = "ke_doccti", indices = [Index(value = ["codcliente"])])
data class FacturaEntity(
    @ColumnInfo(name = "aceptadev") val aceptadev: String,
    @ColumnInfo(name = "agencia") val agencia: String,
    @ColumnInfo(name = "bsflete") val bsflete: Double,
    @ColumnInfo(name = "bsiva") val bsiva: Double,
    @ColumnInfo(name = "bsmtofte") val bsmtofte: Double,
    @ColumnInfo(name = "bsmtoiva") val bsmtoiva: Double,
    @ColumnInfo(name = "bsretencioniva") val bsretencioniva: Double,
    @ColumnInfo(name = "cbsret") val cbsret: Double,
    @ColumnInfo(name = "cbsretflete") val cbsretflete: Double,
    @ColumnInfo(name = "cbsretiva") val cbsretiva: Double,
    @ColumnInfo(name = "cbsrparme") val cbsrparme: Double,
    @ColumnInfo(name = "cdret") val cdret: Double,
    @ColumnInfo(name = "cdretflete") val cdretflete: Double,
    @ColumnInfo(name = "cdretiva") val cdretiva: Double,
    @ColumnInfo(name = "cdrparme") val cdrparme: Double,
    @ColumnInfo(name = "codcliente") val codcliente: String,
    @ColumnInfo(name = "codcoord") val codcoord: String,
    @ColumnInfo(name = "contribesp") val contribesp: Double,
    @ColumnInfo(name = "dFlete") val dFlete: Double,
    @ColumnInfo(name = "diascred") val diascred: Double,
    @PrimaryKey val documento: String,
    @ColumnInfo(name = "dretencion") val dretencion: Double,
    @ColumnInfo(name = "dretencioniva") val dretencioniva: Double,
    @ColumnInfo(name = "dtotalfinal") val dtotalfinal: Double,
    @ColumnInfo(name = "dtotdescuen") val dtotdescuen: Double,
    @ColumnInfo(name = "dtotdev") val dtotdev: Double,
    @ColumnInfo(name = "dtotimpuest") val dtotimpuest: Double,
    @ColumnInfo(name = "dtotneto") val dtotneto: Double,
    @ColumnInfo(name = "dtotpagos") val dtotpagos: Double,
    @ColumnInfo(name = "dvndmtototal") val dvndmtototal: Double,
    @ColumnInfo(name = "emision") val emision: String,
    @ColumnInfo(name = "estatusdoc") val estatusdoc: String,
    @ColumnInfo(name = "fchvencedcto") val fchvencedcto: String,
    @ColumnInfo(name = "fechamodifi") val fechamodifi: String,
    @ColumnInfo(name = "ktiNegesp") val ktiNegesp: String,
    @ColumnInfo(name = "mtodcto") val mtodcto: Double,
    @ColumnInfo(name = "nombrecli") val nombrecli: String,
    @ColumnInfo(name = "recepcion") val recepcion: String,
    @ColumnInfo(name = "retmunMto") val retmunMto: Double,
    @ColumnInfo(name = "rutaParme") val rutaParme: String,
    @ColumnInfo(name = "tasadoc") val tasadoc: Double,
    @ColumnInfo(name = "tienedcto") val tienedcto: String,
    @ColumnInfo(name = "tipodoc") val tipodoc: String,
    @ColumnInfo(name = "tipodocv") val tipodocv: String,
    @ColumnInfo(name = "tipoprecio") val tipoprecio: Double,
    @ColumnInfo(name = "vence") val vence: String,
    @ColumnInfo(name = "vendedor") val vendedor: String
) {
    // Función de extensión para mapear los datos de la tabla al modelo de dominio
    fun toDomain() = Factura(
        aceptadev = aceptadev,
        agencia = agencia,
        bsflete = bsflete,
        bsiva = bsiva,
        bsmtofte = bsmtofte,
        bsmtoiva = bsmtoiva,
        bsretencioniva = bsretencioniva,
        cbsret = cbsret,
        cbsretflete = cbsretflete,
        cbsretiva = cbsretiva,
        cbsrparme = cbsrparme,
        cdret = cdret,
        cdretflete = cdretflete,
        cdretiva = cdretiva,
        cdrparme = cdrparme,
        codcliente = codcliente,
        codcoord = codcoord,
        contribesp = contribesp,
        dFlete = dFlete,
        diascred = diascred,
        documento = documento,
        dretencion = dretencion,
        dretencioniva = dretencioniva,
        dtotalfinal = dtotalfinal,
        dtotdescuen = dtotdescuen,
        dtotdev = dtotdev,
        dtotimpuest = dtotimpuest,
        dtotneto = dtotneto,
        dtotpagos = dtotpagos,
        dvndmtototal = dvndmtototal,
        emision = emision,
        estatusdoc = estatusdoc,
        fchvencedcto = fchvencedcto,
        fechamodifi = fechamodifi,
        ktiNegesp = ktiNegesp,
        mtodcto = mtodcto,
        nombrecli = nombrecli,
        recepcion = recepcion,
        retmunMto = retmunMto,
        rutaParme = rutaParme,
        tasadoc = tasadoc,
        tienedcto = tienedcto,
        tipodoc = tipodoc,
        tipodocv = tipodocv,
        tipoprecio = tipoprecio,
        vence = vence,
        vendedor = vendedor
    )
}
